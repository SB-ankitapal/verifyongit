openapi: 3.1.0
x-stoplight:
  id: zjpslf9i4gbt2
info:
  title: TestOpenAPiFile3.1Y
  version: '1.0'
  description: 'knjbhbhjhmnk[](url)vhvhkhjkh'
servers:
  - url: 'http://localhost:3000'
paths:
  '/users/{userId}':
    parameters:
      - schema:
          type: integer
        name: userId
        in: path
        required: true
        description: Id of an existing user.
    get:
      summary: Get User Info by User ID
      tags: []
      responses:
        '200':
          description: User Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                Get User Alice Smith:
                  value:
                    id: 142
                    firstName: Alice
                    lastName: Smith
                    email: alice.smith@gmail.com
                    dateOfBirth: '1997-10-31'
                    emailVerified: true
                    signUpDate: '2019-08-24'
        '404':
          description: User Not Found
      operationId: get-users-userId
      description: Retrieve the information of the user with the matching user ID.
      x-stoplight:
        id: 17zer4ccgfx92
    patch:
      summary: Update User Information
      operationId: patch-users-userId
      responses:
        '200':
          description: User Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                Updated User Rebecca Baker:
                  value:
                    id: 13
                    firstName: Rebecca
                    lastName: Baker
                    email: rebecca@gmail.com
                    dateOfBirth: '1985-10-02'
                    emailVerified: false
                    createDate: '2019-08-24'
        '404':
          description: User Not Found
        '409':
          description: Email Already Taken
      description: Update the information of an existing user.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                  description: 'If a new email is given, the user''s email verified property will be set to false.'
                dateOfBirth:
                  type: string
            examples:
              Update First Name:
                value:
                  firstName: Rebecca
              Update Email:
                value:
                  email: rebecca@gmail.com
              Update Last Name & Date of Birth:
                value:
                  lastName: Baker
                  dateOfBirth: '1985-10-02'
        description: Patch user properties to update.
      x-stoplight:
        id: cr0hwiwxx0gfx
  /user:
    post:
      summary: Create New User
      operationId: post-user
      responses:
        '200':
          description: User Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                New User Bob Fellow:
                  value:
                    id: 12
                    firstName: Bob
                    lastName: Fellow
                    email: bob.fellow@gmail.com
                    dateOfBirth: '1996-08-24'
                    emailVerified: false
                    createDate: '2020-11-18'
        '400':
          description: Missing Required Information
        '409':
          description: Email Already Taken
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                dateOfBirth:
                  type: string
                  format: date
              required:
                - firstName
                - lastName
                - email
                - dateOfBirth
            examples:
              Create User Bob Fellow:
                value:
                  firstName: Bob
                  lastName: Fellow
                  email: bob.fellow@gmail.com
                  dateOfBirth: '1996-08-24'
        description: Post the necessary fields for the API to create a new user.
      description: Create a new user.
      x-stoplight:
        id: ituzvjva70j6e
  /users/test:
    get:
      summary: ForGetTest
      tags: []
      responses:
        '100':
          description: Continue
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  name1:
                    type: string
                    x-stoplight:
                      id: n2a4ja40gndfu
      operationId: get-users-test
      x-stoplight:
        id: 8va734ad9fdic
      parameters:
        - schema:
            type: string
          in: query
          name: Address
          description: TestAddress
  /user/tes123:
    link:
      summary: LinkUpdate
      tags: []
      responses: {}
      operationId: link-user-tes123
      x-stoplight:
        id: f9ysd7yufzjgm
  /testing/5353:
    lock:
      summary: lockKr
      tags: []
      responses: {}
      operationId: lock-testing-5353
      x-stoplight:
        id: 800ch8gy5m2nr
  /fortest/7870:
    options:
      summary: optionkr
      tags: []
      responses: {}
      operationId: options-fortest-7870
      x-stoplight:
        id: tt8bv4lmvwqzj
  /user/tyyio966:
    link:
      summary: linkkr
      tags: []
      responses: {}
      operationId: link-user-tyyio966
      x-stoplight:
        id: 244o7giceisul
components:
  schemas:
    User:
      title: User
      type: object
      description: ''
      examples:
        - id: 142
          firstName: Alice
          lastName: Smith
          email: alice.smith@gmail.com
          dateOfBirth: '1997-10-31'
          emailVerified: true
          signUpDate: '2019-08-24'
      properties:
        id:
          type: integer
          description: Unique identifier for the given user.
          x-stoplight:
            id: 60fm8tkahkddm
        firstName:
          type: string
          x-stoplight:
            id: 57cv8i4oys55w
        lastName:
          type: string
          x-stoplight:
            id: wtucds34nzzza
        email:
          type: string
          format: email
          x-stoplight:
            id: 2zricyclgcgh9
        dateOfBirth:
          type: string
          format: date
          example: '1997-10-31'
          x-stoplight:
            id: 9dj3bnnz3y96n
        emailVerified:
          type: boolean
          description: Set to true if the user's email has been verified.
          x-stoplight:
            id: uut2maffm01mp
        createDate:
          type: string
          format: date
          description: The date that the user was created.
          x-stoplight:
            id: haiofs54ioi7b
      required:
        - id
        - firstName
        - lastName
        - email
        - emailVerified
      x-stoplight:
        id: rb06no0msvqlc
